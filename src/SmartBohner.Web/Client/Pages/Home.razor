@page "/home"
@inject NavigationManager Nav
@inject HttpClient client

<header>
    <NavigationItem Title="Optionen" Icon="gear-fill" CardClicked="@(() => Nav.NavigateTo("options"))"></NavigationItem>
    <NavigationItem Title="Josua Egger" Icon="person-fill"></NavigationItem>
</header>
<main>
    <BrewingCard CoffeeType=@_brewingCards[0] ActiveChanged="() => OnChangeActive(0)"></BrewingCard>
    <BrewingCard IsActive="true" Click=@CardClickAsync CoffeeType=@_brewingCards[1]></BrewingCard>
    <BrewingCard CoffeeType=@_brewingCards[2] ActiveChanged="() => OnChangeActive(2)"></BrewingCard>
</main>
<footer>
    <WarningCard></WarningCard>
</footer>

@code {
    private List<CoffeeType> _brewingCards = new List<CoffeeType>
    {
        CoffeeType.Espresso,
        CoffeeType.Coffee,
        CoffeeType.Lungo
    };

    private void OnChangeActive(int index)
    {
        var currentActive = _brewingCards[1];
        _brewingCards[1] = _brewingCards[index];
        _brewingCards[index] = currentActive;
    }

    private async Task CardClickAsync(CoffeeType type)
    {
        Task<HttpResponseMessage> callback = type switch
        {
            CoffeeType.Coffee => client.GetAsync("api/coffee/coffee"),
            CoffeeType.Espresso => client.GetAsync("api/coffee/espresso"),
            CoffeeType.Lungo => client.GetAsync("api/coffee/lungo"),

            _ => throw new ArgumentException(),
        };

        var response = await callback;
    }
}
